class PnaMock:

    def __init__(self):
        self._last_write = ''
        self._success = '#OK'

    def write(self, what: str):
        self._last_write = what

    def read(self):
        ans = 0
        if self._last_write == 'SENS1:SWE:POINts?':
            ans = 401
        elif self._last_write == 'SENS1:X?':
            ans = [1100000000, 1100749952, 1101500032, 1102249984, 1103000064, 1103750016, 1104499968, 1105250048, 1106000000, 1106749952, 1107500032, 1108249984, 1108999936, 1109750016, 1110499968, 1111250048, 1112000000, 1112749952, 1113500032, 1114249984, 1115000064, 1115750016, 1116499968, 1117250048, 1118000000, 1118749952, 1119500032, 1120249984, 1120999936, 1121750016, 1122499968, 1123250048, 1124000000, 1124749952, 1125500032, 1126249984, 1127000064, 1127750016, 1128499968, 1129250048, 1130000000, 1130749952, 1131500032, 1132249984, 1132999936, 1133750016, 1134499968, 1135250048, 1136000000, 1136749952, 1137500032, 1138249984, 1139000064, 1139750016, 1140499968, 1141250048, 1142000000, 1142749952, 1143500032, 1144249984, 1144999936, 1145750016, 1146499968, 1147250048, 1148000000, 1148749952, 1149500032, 1150249984, 1151000064, 1151750016, 1152499968, 1153250048, 1154000000, 1154749952, 1155500032, 1156249984, 1156999936, 1157750016, 1158499968, 1159250048, 1160000000, 1160749952, 1161500032, 1162249984, 1163000064, 1163750016, 1164499968, 1165250048, 1166000000, 1166749952, 1167500032, 1168249984, 1168999936, 1169750016, 1170499968, 1171250048, 1172000000, 1172749952, 1173500032, 1174249984, 1175000064, 1175750016, 1176499968, 1177250048, 1178000000, 1178749952, 1179500032, 1180249984, 1180999936, 1181750016, 1182499968, 1183250048, 1184000000, 1184749952, 1185500032, 1186249984, 1187000064, 1187750016, 1188499968, 1189250048, 1190000000, 1190749952, 1191500032, 1192249984, 1192999936, 1193750016, 1194499968, 1195250048, 1196000000, 1196749952, 1197500032, 1198249984, 1199000064, 1199750016, 1200499968, 1201250048, 1202000000, 1202749952, 1203500032, 1204249984, 1204999936, 1205750016, 1206499968, 1207250048, 1208000000, 1208749952, 1209500032, 1210249984, 1211000064, 1211750016, 1212499968, 1213250048, 1214000000, 1214749952, 1215500032, 1216249984, 1216999936, 1217750016, 1218499968, 1219250048, 1220000000, 1220749952, 1221500032, 1222249984, 1223000064, 1223750016, 1224499968, 1225250048, 1226000000, 1226749952, 1227500032, 1228249984, 1228999936, 1229750016, 1230499968, 1231250048, 1232000000, 1232749952, 1233500032, 1234249984, 1235000064, 1235750016, 1236499968, 1237250048, 1238000000, 1238749952, 1239500032, 1240249984, 1240999936, 1241750016, 1242499968, 1243250048, 1244000000, 1244749952, 1245500032, 1246249984, 1247000064, 1247750016, 1248499968, 1249250048, 1250000000, 1250749952, 1251500032, 1252249984, 1252999936, 1253750016, 1254499968, 1255250048, 1256000000, 1256749952, 1257500032, 1258249984, 1259000064, 1259750016, 1260499968, 1261250048, 1262000000, 1262749952, 1263500032, 1264249984, 1264999936, 1265750016, 1266499968, 1267250048, 1268000000, 1268749952, 1269500032, 1270249984, 1271000064, 1271750016, 1272499968, 1273250048, 1274000000, 1274749952, 1275500032, 1276249984, 1276999936, 1277750016, 1278499968, 1279250048, 1280000000, 1280749952, 1281500032, 1282249984, 1283000064, 1283750016, 1284499968, 1285250048, 1286000000, 1286749952, 1287500032, 1288249984, 1288999936, 1289750016, 1290499968, 1291250048, 1292000000, 1292749952, 1293500032, 1294249984, 1295000064, 1295750016, 1296499968, 1297250048, 1298000000, 1298749952, 1299500032, 1300249984, 1300999936, 1301750016, 1302499968, 1303250048, 1304000000, 1304749952, 1305500032, 1306249984, 1307000064, 1307750016, 1308499968, 1309250048, 1310000000, 1310749952, 1311500032, 1312249984, 1312999936, 1313750016, 1314499968, 1315250048, 1316000000, 1316749952, 1317500032, 1318249984, 1319000064, 1319750016, 1320499968, 1321250048, 1322000000, 1322749952, 1323500032, 1324249984, 1324999936, 1325750016, 1326499968, 1327250048, 1328000000, 1328749952, 1329500032, 1330249984, 1331000064, 1331750016, 1332499968, 1333250048, 1334000000, 1334749952, 1335500032, 1336249984, 1336999936, 1337750016, 1338499968, 1339250048, 1340000000, 1340749952, 1341500032, 1342249984, 1343000064, 1343750016, 1344499968, 1345250048, 1346000000, 1346749952, 1347500032, 1348249984, 1348999936, 1349750016, 1350499968, 1351250048, 1352000000, 1352749952, 1353500032, 1354249984, 1355000064, 1355750016, 1356499968, 1357250048, 1358000000, 1358749952, 1359500032, 1360249984, 1360999936, 1361750016, 1362499968, 1363250048, 1364000000, 1364749952, 1365500032, 1366249984, 1367000064, 1367750016, 1368499968, 1369250048, 1370000000, 1370749952, 1371500032, 1372249984, 1372999936, 1373750016, 1374499968, 1375250048, 1376000000, 1376749952, 1377500032, 1378249984, 1379000064, 1379750016, 1380499968, 1381250048, 1382000000, 1382749952, 1383500032, 1384249984, 1384999936, 1385750016, 1386499968, 1387250048, 1388000000, 1388749952, 1389500032, 1390249984, 1391000064, 1391750016, 1392499968, 1393250048, 1394000000, 1394749952, 1395500032, 1396249984, 1396999936, 1397750016, 1398499968, 1399250048, 1400000000]
        elif self._last_write == 'CALC1:PAR:SEL "CH1_S21";CALC1:DATA? FDATA':
            ans = [24.5810375213623, 24.7510356903076, 24.9384937286377, 25.1590461730957, 25.3291473388672, 25.5058135986328, 25.6673698425293, 25.8467311859131, 26.0341567993164, 26.1864967346191, 26.3592376708984, 26.5145187377930, 26.6653118133545, 26.8399066925049, 26.9810543060303, 27.1108608245850, 27.2320003509522, 27.3916473388672, 27.5323009490967, 27.6656112670898, 27.7832145690918, 27.8877525329590, 28.0289134979248, 28.1277275085449, 28.2030029296875, 28.3251457214355, 28.4171333312988, 28.5216979980469, 28.5926513671875, 28.7088642120361, 28.7783946990967, 28.8516387939453, 28.9245624542236, 29.0172748565674, 29.0700778961182, 29.1395378112793, 29.2226009368897, 29.2589416503906, 29.3255519866943, 29.3852252960205, 29.4187507629395, 29.4743804931641, 29.5235824584961, 29.5499534606934, 29.5976428985596, 29.6439552307129, 29.6627368927002, 29.7033042907715, 29.7377529144287, 29.7751750946045, 29.7930622100830, 29.8242397308350, 29.8441658020020, 29.8706188201904, 29.8936138153076, 29.9042510986328, 29.9435787200928, 29.9620761871338, 29.9825820922852, 29.9836006164551, 30.0164508819580, 30.0088615417480, 30.0322723388672, 30.0521011352539, 30.0587520599365, 30.0745639801025, 30.1072616577148, 30.0905094146729, 30.1157855987549, 30.1034278869629, 30.1254158020020, 30.1259422302246, 30.1414356231689, 30.1328792572022, 30.1506595611572, 30.1517219543457, 30.1648788452148, 30.1631374359131, 30.1671524047852, 30.1911392211914, 30.1924324035645, 30.1775207519531, 30.2019424438477, 30.1851444244385, 30.1799774169922, 30.2014942169189, 30.1955089569092, 30.2115306854248, 30.1807975769043, 30.2035808563232, 30.1884021759033, 30.2037601470947, 30.2088069915772, 30.2181129455566, 30.2136020660400, 30.2209243774414, 30.2325191497803, 30.2210426330566, 30.2169818878174, 30.2133922576904, 30.2134590148926, 30.2239437103272, 30.2287445068359, 30.2183418273926, 30.2063999176025, 30.2393589019775, 30.2312412261963, 30.2277984619141, 30.2219047546387, 30.2238140106201, 30.2307167053223, 30.2191009521484, 30.2192134857178, 30.2300395965576, 30.2339096069336, 30.2147350311279, 30.2016143798828, 30.2164363861084, 30.2405624389648, 30.2318286895752, 30.2164478302002, 30.2516403198242, 30.2482814788818, 30.2425880432129, 30.2528305053711, 30.2430667877197, 30.2665710449219, 30.2347698211670, 30.2539291381836, 30.2552452087402, 30.2766399383545, 30.2525539398193, 30.2659702301025, 30.2564754486084, 30.2555084228516, 30.2627601623535, 30.2609615325928, 30.2673397064209, 30.2870769500732, 30.2878742218018, 30.3026065826416, 30.3011665344238, 30.3025302886963, 30.2953872680664, 30.2928619384766, 30.2968769073486, 30.3143711090088, 30.3231239318848, 30.3186283111572, 30.3125419616699, 30.3097438812256, 30.3362579345703, 30.3393154144287, 30.3402385711670, 30.3266944885254, 30.3417472839355, 30.3483982086182, 30.3674488067627, 30.3802528381348, 30.3572921752930, 30.3529415130615, 30.3833255767822, 30.3789138793945, 30.3955249786377, 30.4082794189453, 30.3904609680176, 30.4028987884522, 30.4182014465332, 30.4175453186035, 30.4253520965576, 30.4366855621338, 30.4237098693848, 30.4317951202393, 30.4307308197022, 30.4348793029785, 30.4523124694824, 30.4577522277832, 30.4583644866943, 30.4584941864014, 30.4642772674561, 30.4805984497070, 30.4662322998047, 30.4845695495605, 30.4828414916992, 30.5004711151123, 30.4891471862793, 30.4814643859863, 30.4886569976807, 30.4847888946533, 30.4892292022705, 30.5081329345703, 30.4836540222168, 30.5018463134766, 30.5000858306885, 30.5054416656494, 30.5005931854248, 30.4974784851074, 30.4815044403076, 30.4905452728272, 30.4800338745117, 30.4981918334961, 30.4845123291016, 30.4992580413818, 30.4920616149902, 30.4988155364990, 30.4813194274902, 30.4909706115723, 30.4755992889404, 30.4667758941650, 30.4725265502930, 30.4810276031494, 30.4570522308350, 30.4545249938965, 30.4812946319580, 30.4538459777832, 30.4387073516846, 30.4447708129883, 30.4311714172363, 30.4314422607422, 30.4091262817383, 30.4139041900635, 30.4176712036133, 30.3915176391602, 30.3907337188721, 30.4023780822754, 30.3961658477783, 30.3694858551025, 30.3658638000488, 30.3539009094238, 30.3543472290039, 30.3436889648438, 30.3450241088867, 30.3421802520752, 30.3254165649414, 30.3291149139404, 30.2991218566895, 30.2986850738525, 30.2919998168945, 30.2774715423584, 30.2736167907715, 30.2616958618164, 30.2710189819336, 30.2660999298096, 30.2366905212402, 30.2286090850830, 30.2226886749268, 30.2168464660645, 30.2032108306885, 30.1985874176025, 30.1968536376953, 30.1686420440674, 30.1666908264160, 30.1622543334961, 30.1657123565674, 30.1356906890869, 30.1277732849121, 30.1196098327637, 30.1110019683838, 30.1037483215332, 30.0869102478027, 30.0892410278320, 30.0717678070068, 30.0547981262207, 30.0613746643066, 30.0377807617188, 30.0488796234131, 30.0139160156250, 30.0162162780762, 29.9953155517578, 30.0273475646973, 30.0029087066650, 30.0036792755127, 30.0138130187988, 29.9803543090820, 29.9852294921875, 29.9963417053223, 29.9645729064941, 29.9520530700684, 29.9598522186279, 29.9432106018066, 29.9535980224609, 29.9482803344727, 29.9422225952148, 29.9439487457275, 29.9460582733154, 29.9367084503174, 29.9370460510254, 29.9489707946777, 29.9174747467041, 29.9302387237549, 29.9557495117188, 29.9255447387695, 29.9308090209961, 29.9335422515869, 29.9431819915772, 29.9310359954834, 29.9473228454590, 29.9386711120605, 29.9485740661621, 29.9480552673340, 29.9569664001465, 29.9663429260254, 29.9783859252930, 29.9745731353760, 29.9984188079834, 29.9942970275879, 29.9764423370361, 30.0048542022705, 30.0039482116699, 29.9988498687744, 30.0260925292969, 30.0228080749512, 30.0436077117920, 30.0380630493164, 30.0614681243897, 30.0536441802979, 30.0650730133057, 30.0715103149414, 30.0827789306641, 30.0938167572022, 30.0960350036621, 30.0960788726807, 30.1098423004150, 30.1160736083984, 30.1138534545898, 30.1312770843506, 30.1405372619629, 30.1369380950928, 30.1427783966064, 30.1593341827393, 30.1233978271484, 30.1377620697022, 30.1486015319824, 30.1484661102295, 30.1340942382813, 30.1421775817871, 30.1348991394043, 30.1467227935791, 30.1281623840332, 30.1323204040527, 30.1207485198975, 30.0955352783203, 30.0949916839600, 30.0802268981934, 30.0832347869873, 30.0642108917236, 30.0372924804688, 30.0063114166260, 29.9949569702148, 29.9551792144775, 29.9519824981689, 29.9089488983154, 29.8710250854492, 29.8392181396484, 29.8127460479736, 29.7716197967529, 29.7244396209717, 29.6885623931885, 29.6299839019775, 29.5745201110840, 29.5346679687500, 29.4894371032715, 29.4318447113037, 29.3566284179688, 29.2962665557861, 29.2142562866211, 29.1301097869873, 29.0920600891113, 29.0052318572998, 28.9359474182129, 28.8467578887939, 28.7442283630371, 28.6818237304688, 28.5903797149658, 28.4858093261719, 28.3984107971191, 28.2972583770752, 28.1914653778076, 28.0971622467041, 27.9940128326416, 27.9021129608154, 27.7797641754150, 27.6568832397461, 27.5508937835693, 27.4551315307617, 27.3209800720215, 27.2036838531494, 27.0967769622803, 26.9756278991699, 26.8448238372803, 26.7190208435059, 26.6011695861816, 26.4705085754395, 26.3460216522217, 26.2038116455078, 26.0748500823975, 25.9383163452148, 25.8112068176270, 25.6865367889404, 25.5508766174316, 25.4167575836182]
        return ans

    def query(self, what: str):
        self.write(what)
        return self.read()

    def close(self):
        print('pna mock close')

